{
  "contractName": "TestTsuno",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "testAccounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"testAccounts\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/James/projects/tsuno-fe/contracts/testing/TestTsuno.sol\":\"TestTsuno\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/James/projects/tsuno-fe/contracts/protocol/TsunoToken.sol\":{\"keccak256\":\"0x2e1d81f41848815c34e12412db9a9afc1f787b4657cf2d879aa0006763b613ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71130dbed3d6a9854b28ffd977e984c6b203f2e3fd575d05b9e4f51662e52d7f\",\"dweb:/ipfs/QmbVN8QRTPwXffPxT7aMEXH6G781FhRJjXozgder5DYafB\"]},\"/C/Users/James/projects/tsuno-fe/contracts/testing/TestTsuno.sol\":{\"keccak256\":\"0x2c5841d3d022ce682a201495a12c5294677af4f9101885ab8a73a951da958018\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7826974930277ff1916a8953268b0561f00ad02cd81d33ea84ca1acbe54d9be\",\"dweb:/ipfs/QmRPgqG9RepVgkZ57eCzTdCEGN7aYEeKmn5bYTRstysbtN\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012913803806200129183398101604081905262000034916200032c565b604080518082018252600a8152692a39bab737aa37b5b2b760b11b6020808301918252835180850190945260058452645453554e4f60d81b908401528151919291620000839160039162000278565b5080516200009990600490602084019062000278565b50506005805460ff19166012179055506000620000b562000152565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060005b81518110156200014a57620001418282815181106200012957fe5b6020026020010151620186a06200015660201b60201c565b6001016200010e565b50506200047f565b3390565b6001600160a01b038216620001885760405162461bcd60e51b81526004016200017f9062000418565b60405180910390fd5b620001966000838362000242565b620001b2816002546200024760201b620007071790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620001e59183906200070762000247821b17901c565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620002369085906200044f565b60405180910390a35050565b505050565b6000828201838110156200026f5760405162461bcd60e51b81526004016200017f90620003e1565b90505b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002bb57805160ff1916838001178555620002eb565b82800160010185558215620002eb579182015b82811115620002eb578251825591602001919060010190620002ce565b50620002f9929150620002fd565b5090565b5b80821115620002f95760008155600101620002fe565b80516001600160a01b03811681146200027257600080fd5b600060208083850312156200033f578182fd5b82516001600160401b038082111562000356578384fd5b818501915085601f8301126200036a578384fd5b81518181111562000379578485fd5b83810291506200038b84830162000458565b8181528481019084860184860187018a1015620003a6578788fd5b8795505b83861015620003d457620003bf8a8262000314565b835260019590950194918601918601620003aa565b5098975050505050505050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b6040518181016001600160401b03811182821017156200047757600080fd5b604052919050565b610e02806200048f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a9059cbb11610071578063a9059cbb146101fe578063b3ab15fb14610211578063dd62ed3e14610224578063f28e093d14610237578063f2fde38b1461024a5761010b565b8063715018a6146101c65780638da5cb5b146101ce57806395d89b41146101e3578063a457c2d7146101eb5761010b565b8063313ce567116100de578063313ce56714610176578063395093511461018b57806340c10f191461019e57806370a08231146101b35761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461014e57806323b872dd14610163575b600080fd5b61011861025d565b6040516101259190610ae0565b60405180910390f35b61014161013c366004610a97565b6102f3565b6040516101259190610ad5565b610156610311565b6040516101259190610d2a565b610141610171366004610a57565b610317565b61017e61039e565b6040516101259190610d33565b610141610199366004610a97565b6103a7565b6101b16101ac366004610a97565b6103f5565b005b6101566101c1366004610a08565b61041a565b6101b1610435565b6101d66104c8565b6040516101259190610ac1565b6101186104dc565b6101416101f9366004610a97565b61053d565b61014161020c366004610a97565b6105a5565b6101b161021f366004610a08565b6105b9565b610156610232366004610a23565b610615565b6101b1610245366004610a97565b61040c565b6101b1610258366004610a08565b610640565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b5050505050905090565b6000610307610300610733565b8484610737565b5060015b92915050565b60025490565b60006103248484846107eb565b61039484610330610733565b61038f85604051806060016040528060288152602001610d80602891396001600160a01b038a1660009081526001602052604081209061036e610733565b6001600160a01b031681526020810191909152604001600020549190610900565b610737565b5060019392505050565b60055460ff1690565b60006103076103b4610733565b8461038f85600160006103c5610733565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610707565b6006546001600160a01b0316331461040c57600080fd5b610416828261092c565b5050565b6001600160a01b031660009081526020819052604090205490565b61043d610733565b60055461010090046001600160a01b039081169116146104785760405162461bcd60e51b815260040161046f90610c35565b60405180910390fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e95780601f106102be576101008083540402835291602001916102e9565b600061030761054a610733565b8461038f85604051806060016040528060258152602001610da86025913960016000610574610733565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610900565b60006103076105b2610733565b84846107eb565b6105c1610733565b60055461010090046001600160a01b039081169116146105f35760405162461bcd60e51b815260040161046f90610c35565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610648610733565b60055461010090046001600160a01b0390811691161461067a5760405162461bcd60e51b815260040161046f90610c35565b6001600160a01b0381166106a05760405162461bcd60e51b815260040161046f90610b76565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60008282018381101561072c5760405162461bcd60e51b815260040161046f90610bfe565b9392505050565b3390565b6001600160a01b03831661075d5760405162461bcd60e51b815260040161046f90610caf565b6001600160a01b0382166107835760405162461bcd60e51b815260040161046f90610bbc565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107de908590610d2a565b60405180910390a3505050565b6001600160a01b0383166108115760405162461bcd60e51b815260040161046f90610c6a565b6001600160a01b0382166108375760405162461bcd60e51b815260040161046f90610b33565b6108428383836109ec565b61087f81604051806060016040528060268152602001610d5a602691396001600160a01b0386166000908152602081905260409020549190610900565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108ae9082610707565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107de908590610d2a565b600081848411156109245760405162461bcd60e51b815260040161046f9190610ae0565b505050900390565b6001600160a01b0382166109525760405162461bcd60e51b815260040161046f90610cf3565b61095e600083836109ec565b60025461096b9082610707565b6002556001600160a01b0382166000908152602081905260409020546109919082610707565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109e0908590610d2a565b60405180910390a35050565b505050565b80356001600160a01b038116811461030b57600080fd5b600060208284031215610a19578081fd5b61072c83836109f1565b60008060408385031215610a35578081fd5b610a3f84846109f1565b9150610a4e84602085016109f1565b90509250929050565b600080600060608486031215610a6b578081fd5b8335610a7681610d41565b92506020840135610a8681610d41565b929592945050506040919091013590565b60008060408385031215610aa9578182fd5b610ab384846109f1565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610b0c57858101830151858201604001528201610af0565b81811115610b1d5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b6001600160a01b0381168114610d5657600080fd5b5056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f7cf5c9390884f8f1f828cf9a280cad06d242e81dd5323e47e16e15c117924ed64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a9059cbb11610071578063a9059cbb146101fe578063b3ab15fb14610211578063dd62ed3e14610224578063f28e093d14610237578063f2fde38b1461024a5761010b565b8063715018a6146101c65780638da5cb5b146101ce57806395d89b41146101e3578063a457c2d7146101eb5761010b565b8063313ce567116100de578063313ce56714610176578063395093511461018b57806340c10f191461019e57806370a08231146101b35761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461014e57806323b872dd14610163575b600080fd5b61011861025d565b6040516101259190610ae0565b60405180910390f35b61014161013c366004610a97565b6102f3565b6040516101259190610ad5565b610156610311565b6040516101259190610d2a565b610141610171366004610a57565b610317565b61017e61039e565b6040516101259190610d33565b610141610199366004610a97565b6103a7565b6101b16101ac366004610a97565b6103f5565b005b6101566101c1366004610a08565b61041a565b6101b1610435565b6101d66104c8565b6040516101259190610ac1565b6101186104dc565b6101416101f9366004610a97565b61053d565b61014161020c366004610a97565b6105a5565b6101b161021f366004610a08565b6105b9565b610156610232366004610a23565b610615565b6101b1610245366004610a97565b61040c565b6101b1610258366004610a08565b610640565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b5050505050905090565b6000610307610300610733565b8484610737565b5060015b92915050565b60025490565b60006103248484846107eb565b61039484610330610733565b61038f85604051806060016040528060288152602001610d80602891396001600160a01b038a1660009081526001602052604081209061036e610733565b6001600160a01b031681526020810191909152604001600020549190610900565b610737565b5060019392505050565b60055460ff1690565b60006103076103b4610733565b8461038f85600160006103c5610733565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610707565b6006546001600160a01b0316331461040c57600080fd5b610416828261092c565b5050565b6001600160a01b031660009081526020819052604090205490565b61043d610733565b60055461010090046001600160a01b039081169116146104785760405162461bcd60e51b815260040161046f90610c35565b60405180910390fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e95780601f106102be576101008083540402835291602001916102e9565b600061030761054a610733565b8461038f85604051806060016040528060258152602001610da86025913960016000610574610733565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610900565b60006103076105b2610733565b84846107eb565b6105c1610733565b60055461010090046001600160a01b039081169116146105f35760405162461bcd60e51b815260040161046f90610c35565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610648610733565b60055461010090046001600160a01b0390811691161461067a5760405162461bcd60e51b815260040161046f90610c35565b6001600160a01b0381166106a05760405162461bcd60e51b815260040161046f90610b76565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60008282018381101561072c5760405162461bcd60e51b815260040161046f90610bfe565b9392505050565b3390565b6001600160a01b03831661075d5760405162461bcd60e51b815260040161046f90610caf565b6001600160a01b0382166107835760405162461bcd60e51b815260040161046f90610bbc565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107de908590610d2a565b60405180910390a3505050565b6001600160a01b0383166108115760405162461bcd60e51b815260040161046f90610c6a565b6001600160a01b0382166108375760405162461bcd60e51b815260040161046f90610b33565b6108428383836109ec565b61087f81604051806060016040528060268152602001610d5a602691396001600160a01b0386166000908152602081905260409020549190610900565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108ae9082610707565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107de908590610d2a565b600081848411156109245760405162461bcd60e51b815260040161046f9190610ae0565b505050900390565b6001600160a01b0382166109525760405162461bcd60e51b815260040161046f90610cf3565b61095e600083836109ec565b60025461096b9082610707565b6002556001600160a01b0382166000908152602081905260409020546109919082610707565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109e0908590610d2a565b60405180910390a35050565b505050565b80356001600160a01b038116811461030b57600080fd5b600060208284031215610a19578081fd5b61072c83836109f1565b60008060408385031215610a35578081fd5b610a3f84846109f1565b9150610a4e84602085016109f1565b90509250929050565b600080600060608486031215610a6b578081fd5b8335610a7681610d41565b92506020840135610a8681610d41565b929592945050506040919091013590565b60008060408385031215610aa9578182fd5b610ab384846109f1565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610b0c57858101830151858201604001528201610af0565b81811115610b1d5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b6001600160a01b0381168114610d5657600080fd5b5056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f7cf5c9390884f8f1f828cf9a280cad06d242e81dd5323e47e16e15c117924ed64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "179:309:27:-:0;;;218:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2013:141:31;;;;;;;;;;;-1:-1:-1;;;2013:141:31;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2013:141:31;;;;2085:12;;2013:141;;;2085:12;;:5;;:12;:::i;:::-;-1:-1:-1;2107:16:31;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:31;:14;;-1:-1:-1;;2133:14:31;2145:2;2133:14;;;-1:-1:-1;2133:9:31;885:12:29;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:29;;-1:-1:-1;;;;;907:18:29;;;;;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:29;-1:-1:-1;;940:43:29;;-1:-1:-1;;940:43:29;831:159;283:9:27;278:105;302:12;:19;298:1;:23;278:105;;;342:30;348:12;361:1;348:15;;;;;;;;;;;;;;365:6;342:5;;;:30;;:::i;:::-;323:3;;278:105;;;;218:171;179:309;;590:104:28;677:10;590:104;:::o;7835:370:31:-;-1:-1:-1;;;;;7918:21:31;;7910:65;;;;-1:-1:-1;;;7910:65:31;;;;;;;:::i;:::-;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:24;8078:6;8061:12;;:16;;;;;;:24;;;;:::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:31;;:9;:18;;;;;;;;;;;;:30;;8139:6;;8116:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8095:18:31;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;8095:18;;:9;8161:37;;;;8191:6;;8161:37;:::i;:::-;;;;;;;;7835:370;;:::o;10695:92::-;;;;:::o;874:176:30:-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:30;;;;;;;:::i;:::-;1042:1;-1:-1:-1;874:176:30;;;;;:::o;179:309:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;179:309:27;;;-1:-1:-1;179:309:27;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;-1:-1;;;;;4070:54;;4274:35;;4264:2;;4323:1;;4313:12;894:392;;1034:2;;1022:9;1013:7;1009:23;1005:32;1002:2;;;-1:-1;;1040:12;1002:2;1085:24;;-1:-1;;;;;1118:30;;;1115:2;;;-1:-1;;1151:12;1115:2;1253:6;1242:9;1238:22;;;292:3;285:4;277:6;273:17;269:27;259:2;;-1:-1;;300:12;259:2;340:6;334:13;1129:18;3578:6;3575:30;3572:2;;;-1:-1;;3608:12;3572:2;1034;3645:6;3641:17;;;362:80;1034:2;3641:17;3706:15;362:80;:::i;:::-;470:21;;;527:14;;;;502:17;;;607:27;;;;;604:36;-1:-1;601:2;;;-1:-1;;643:12;601:2;-1:-1;669:10;;663:217;688:6;685:1;682:13;663:217;;;768:48;812:3;800:10;768:48;:::i;:::-;756:61;;710:1;703:9;;;;;831:14;;;;859;;663:217;;;-1:-1;1171:99;996:290;-1:-1;;;;;;;;996:290::o;2089:416::-;2289:2;2303:47;;;1518:2;2274:18;;;3842:19;1554:29;3882:14;;;1534:50;1603:12;;;2260:245::o;2512:416::-;2712:2;2726:47;;;1854:2;2697:18;;;3842:19;1890:33;3882:14;;;1870:54;1943:12;;;2683:245::o;2935:222::-;2040:37;;;3062:2;3047:18;;3033:124::o;3164:256::-;3226:2;3220:9;3252:17;;;-1:-1;;;;;3312:34;;3348:22;;;3309:62;3306:2;;;3384:1;;3374:12;3306:2;3226;3393:22;3204:216;;-1:-1;3204:216::o;:::-;179:309:27;;;;;;",
  "deployedSourceMap": "179:309:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4255:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3262:98::-;;;:::i;:::-;;;;;;;:::i;4881:317::-;;;;;;:::i;:::-;;:::i;3121:81::-;;;:::i;:::-;;;;;;;:::i;5593:215::-;;;;;;:::i;:::-;;:::i;381:100:6:-;;;;;;:::i;:::-;;:::i;:::-;;3418:117:31;;;;;;:::i;:::-;;:::i;1689:145:29:-;;;:::i;1066:77::-;;;:::i;:::-;;;;;;;:::i;2413:85:31:-;;;:::i;6295:266::-;;;;;;:::i;:::-;;:::i;3738:172::-;;;;;;:::i;:::-;;:::i;487:94:6:-;;;;;;:::i;:::-;;:::i;3968:149:31:-;;;;;;:::i;:::-;;:::i;395:91:27:-;;;;;;:::i;:::-;;:::i;1983:240:29:-;;;;;;:::i;:::-;;:::i;2219:81:31:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:31;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;4881:317::-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:31;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:31;;;;;;;;;;;;-1:-1:-1;5080:33:31;;;:89;:37;:89::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:31;4881:317;;;;;:::o;3121:81::-;3186:9;;;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:31;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:31;;;:34;;;;;;;;;;;:38;:50::i;381:100:6:-;348:8;;-1:-1:-1;;;;;348:8:6;334:10;:22;326:31;;;;;;455:19:::1;461:3;466:7;455:5;:19::i;:::-;381:100:::0;;:::o;3418:117:31:-;-1:-1:-1;;;;;3510:18:31;3484:7;3510:18;;;;;;;;;;;;3418:117::o;1689:145:29:-;1280:12;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:29;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:29;;;;;;;:::i;:::-;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;1779:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1779:6:29::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:29::1;::::0;;1689:145::o;1066:77::-;1130:6;;;;;-1:-1:-1;;;;;1130:6:29;;1066:77::o;2413:85:31:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;6295:266;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:31;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:31;;;:34;;;;;;;;;;;:96;:38;:96::i;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;487:94:6:-;1280:12:29;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:29;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:29;;;;;;;:::i;:::-;554:8:6::1;:20:::0;;-1:-1:-1;;;;;;554:20:6::1;-1:-1:-1::0;;;;;554:20:6;;;::::1;::::0;;;::::1;::::0;;487:94::o;3968:149:31:-;-1:-1:-1;;;;;4083:18:31;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;1983:240:29:-;1280:12;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:29;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:29;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:29;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:29::1;;;;;;;:::i;:::-;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:29;;::::1;::::0;2172:6:::1;::::0;::::1;;::::0;2151:38:::1;::::0;;;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;2199:17:29;;::::1;;;-1:-1:-1::0;;;;;;2199:17:29;;::::1;::::0;;;::::1;::::0;;1983:240::o;874:176:30:-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:30;;;;;;;:::i;:::-;1042:1;874:176;-1:-1:-1;;;874:176:30:o;590:104:28:-;677:10;590:104;:::o;9357:340:31:-;-1:-1:-1;;;;;9458:19:31;;9450:68;;;;-1:-1:-1;;;9450:68:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;9536:21:31;;9528:68;;;;-1:-1:-1;;;9528:68:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;9607:18:31;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9658:32;;;;;9637:6;;9658:32;:::i;:::-;;;;;;;;9357:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:31;;7132:70;;;;-1:-1:-1;;;7132:70:31;;;;;;;:::i;:::-;-1:-1:-1;;;;;7220:23:31;;7212:71;;;;-1:-1:-1;;;7212:71:31;;;;;;;:::i;:::-;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:31;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7352:17:31;;;:9;:17;;;;;;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:24;:32::i;:::-;-1:-1:-1;;;;;7453:20:31;;;:9;:20;;;;;;;;;;;;:55;;;;7523:35;;;;;;;;;;7551:6;;7523:35;:::i;1746:187:30:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:30;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:30;;;1746:187::o;7835:370:31:-;-1:-1:-1;;;;;7918:21:31;;7910:65;;;;-1:-1:-1;;;7910:65:31;;;;;;;:::i;:::-;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:12;;:24;;8078:6;8061:16;:24::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:31;;:9;:18;;;;;;;;;;;:30;;8139:6;8116:22;:30::i;:::-;-1:-1:-1;;;;;8095:18:31;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;8095:18;;:9;8161:37;;;;8191:6;;8161:37;:::i;:::-;;;;;;;;7835:370;;:::o;10695:92::-;;;;:::o;5:130:-1:-;72:20;;-1:-1;;;;;10667:54;;11341:35;;11331:2;;11390:1;;11380:12;279:241;;383:2;371:9;362:7;358:23;354:32;351:2;;;-1:-1;;389:12;351:2;451:53;496:7;472:22;451:53;:::i;527:366::-;;;648:2;636:9;627:7;623:23;619:32;616:2;;;-1:-1;;654:12;616:2;716:53;761:7;737:22;716:53;:::i;:::-;706:63;;824:53;869:7;806:2;849:9;845:22;824:53;:::i;:::-;814:63;;610:283;;;;;:::o;900:491::-;;;;1038:2;1026:9;1017:7;1013:23;1009:32;1006:2;;;-1:-1;;1044:12;1006:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1096:63;-1:-1;1196:2;1235:22;;72:20;97:33;72:20;97:33;:::i;:::-;1000:391;;1204:63;;-1:-1;;;1304:2;1343:22;;;;209:20;;1000:391::o;1398:366::-;;;1519:2;1507:9;1498:7;1494:23;1490:32;1487:2;;;-1:-1;;1525:12;1487:2;1587:53;1632:7;1608:22;1587:53;:::i;:::-;1577:63;1677:2;1716:22;;;;209:20;;-1:-1;;;1481:283::o;5517:222::-;-1:-1;;;;;10667:54;;;;1842:37;;5644:2;5629:18;;5615:124::o;5746:210::-;10579:13;;10572:21;1956:34;;5867:2;5852:18;;5838:118::o;5963:310::-;;6110:2;;6131:17;6124:47;2147:5;10202:12;10359:6;6110:2;6099:9;6095:18;10347:19;-1:-1;10973:101;10987:6;10984:1;10981:13;10973:101;;;11054:11;;;;;11048:18;11035:11;;;10387:14;11035:11;11028:39;11002:10;;10973:101;;;11089:6;11086:1;11083:13;11080:2;;;-1:-1;10387:14;11145:6;6099:9;11136:16;;11129:27;11080:2;-1:-1;11261:7;11245:14;-1:-1;;11241:28;2305:39;;;;10387:14;2305:39;;6081:192;-1:-1;;;6081:192::o;6280:416::-;6480:2;6494:47;;;2581:2;6465:18;;;10347:19;2617:34;10387:14;;;2597:55;-1:-1;;;2672:12;;;2665:27;2711:12;;;6451:245::o;6703:416::-;6903:2;6917:47;;;2962:2;6888:18;;;10347:19;2998:34;10387:14;;;2978:55;-1:-1;;;3053:12;;;3046:30;3095:12;;;6874:245::o;7126:416::-;7326:2;7340:47;;;3346:2;7311:18;;;10347:19;3382:34;10387:14;;;3362:55;-1:-1;;;3437:12;;;3430:26;3475:12;;;7297:245::o;7549:416::-;7749:2;7763:47;;;3726:2;7734:18;;;10347:19;3762:29;10387:14;;;3742:50;3811:12;;;7720:245::o;7972:416::-;8172:2;8186:47;;;8157:18;;;10347:19;4098:34;10387:14;;;4078:55;4152:12;;;8143:245::o;8395:416::-;8595:2;8609:47;;;4403:2;8580:18;;;10347:19;4439:34;10387:14;;;4419:55;-1:-1;;;4494:12;;;4487:29;4535:12;;;8566:245::o;8818:416::-;9018:2;9032:47;;;4786:2;9003:18;;;10347:19;4822:34;10387:14;;;4802:55;-1:-1;;;4877:12;;;4870:28;4917:12;;;8989:245::o;9241:416::-;9441:2;9455:47;;;5168:2;9426:18;;;10347:19;5204:33;10387:14;;;5184:54;5257:12;;;9412:245::o;9664:222::-;5354:37;;;9791:2;9776:18;;9762:124::o;9893:214::-;10883:4;10872:16;;;;5470:35;;10016:2;10001:18;;9987:120::o;11282:117::-;-1:-1;;;;;10667:54;;11341:35;;11331:2;;11390:1;;11380:12;11331:2;11325:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport {TsunoToken} from '../protocol/TsunoToken.sol';\n\n/* solium-disable-next-line */\ncontract TestTsuno is TsunoToken {\n    constructor(address[] memory testAccounts) public {\n        for (uint256 i = 0; i < testAccounts.length; i++) {\n            _mint(testAccounts[i], 100000);\n        }\n    }\n\n    function testMint(address _to, uint256 _amount) public {\n        _mint(_to, _amount);\n    }\n}\n",
  "sourcePath": "C:/Users/James/projects/tsuno-fe/contracts/testing/TestTsuno.sol",
  "ast": {
    "absolutePath": "/C/Users/James/projects/tsuno-fe/contracts/testing/TestTsuno.sol",
    "exportedSymbols": {
      "TestTsuno": [
        4520
      ]
    },
    "id": 4521,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4474,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:27"
      },
      {
        "id": 4475,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:27"
      },
      {
        "absolutePath": "/C/Users/James/projects/tsuno-fe/contracts/protocol/TsunoToken.sol",
        "file": "../protocol/TsunoToken.sol",
        "id": 4477,
        "nodeType": "ImportDirective",
        "scope": 4521,
        "sourceUnit": 262,
        "src": "92:54:27",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 4476,
              "name": "TsunoToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "100:10:27",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4478,
              "name": "TsunoToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 261,
              "src": "201:10:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TsunoToken_$261",
                "typeString": "contract TsunoToken"
              }
            },
            "id": 4479,
            "nodeType": "InheritanceSpecifier",
            "src": "201:10:27"
          }
        ],
        "contractDependencies": [
          261,
          4543,
          4652,
          5355,
          5433
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4520,
        "linearizedBaseContracts": [
          4520,
          261,
          4652,
          5355,
          5433,
          4543
        ],
        "name": "TestTsuno",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4505,
              "nodeType": "Block",
              "src": "268:121:27",
              "statements": [
                {
                  "body": {
                    "id": 4503,
                    "nodeType": "Block",
                    "src": "328:55:27",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 4497,
                                "name": "testAccounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4482,
                                "src": "348:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 4499,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 4498,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4486,
                                "src": "361:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "348:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "313030303030",
                              "id": 4500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "365:6:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              },
                              "value": "100000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              }
                            ],
                            "id": 4496,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5231,
                            "src": "342:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "342:30:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4502,
                        "nodeType": "ExpressionStatement",
                        "src": "342:30:27"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4489,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4486,
                      "src": "298:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4490,
                        "name": "testAccounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4482,
                        "src": "302:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "302:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "298:23:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4504,
                  "initializationExpression": {
                    "assignments": [
                      4486
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4486,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 4504,
                        "src": "283:9:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "283:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4488,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "295:1:27",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "283:13:27"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "323:3:27",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4493,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4486,
                        "src": "323:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4495,
                    "nodeType": "ExpressionStatement",
                    "src": "323:3:27"
                  },
                  "nodeType": "ForStatement",
                  "src": "278:105:27"
                }
              ]
            },
            "documentation": null,
            "id": 4506,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4482,
                  "mutability": "mutable",
                  "name": "testAccounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4506,
                  "src": "230:29:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4480,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "230:7:27",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4481,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "230:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "229:31:27"
            },
            "returnParameters": {
              "id": 4484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:27"
            },
            "scope": 4520,
            "src": "218:171:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4518,
              "nodeType": "Block",
              "src": "450:36:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4514,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4508,
                        "src": "466:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4515,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "471:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4513,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5231,
                      "src": "460:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:19:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4517,
                  "nodeType": "ExpressionStatement",
                  "src": "460:19:27"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f28e093d",
            "id": 4519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4508,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4519,
                  "src": "413:11:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4510,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4519,
                  "src": "426:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "412:30:27"
            },
            "returnParameters": {
              "id": 4512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "450:0:27"
            },
            "scope": 4520,
            "src": "395:91:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4521,
        "src": "179:309:27"
      }
    ],
    "src": "33:456:27"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/James/projects/tsuno-fe/contracts/testing/TestTsuno.sol",
    "exportedSymbols": {
      "TestTsuno": [
        4520
      ]
    },
    "id": 4521,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4474,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:27"
      },
      {
        "id": 4475,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:27"
      },
      {
        "absolutePath": "/C/Users/James/projects/tsuno-fe/contracts/protocol/TsunoToken.sol",
        "file": "../protocol/TsunoToken.sol",
        "id": 4477,
        "nodeType": "ImportDirective",
        "scope": 4521,
        "sourceUnit": 262,
        "src": "92:54:27",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 4476,
              "name": "TsunoToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "100:10:27",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4478,
              "name": "TsunoToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 261,
              "src": "201:10:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TsunoToken_$261",
                "typeString": "contract TsunoToken"
              }
            },
            "id": 4479,
            "nodeType": "InheritanceSpecifier",
            "src": "201:10:27"
          }
        ],
        "contractDependencies": [
          261,
          4543,
          4652,
          5355,
          5433
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4520,
        "linearizedBaseContracts": [
          4520,
          261,
          4652,
          5355,
          5433,
          4543
        ],
        "name": "TestTsuno",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4505,
              "nodeType": "Block",
              "src": "268:121:27",
              "statements": [
                {
                  "body": {
                    "id": 4503,
                    "nodeType": "Block",
                    "src": "328:55:27",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 4497,
                                "name": "testAccounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4482,
                                "src": "348:12:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 4499,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 4498,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4486,
                                "src": "361:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "348:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "313030303030",
                              "id": 4500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "365:6:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              },
                              "value": "100000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              }
                            ],
                            "id": 4496,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5231,
                            "src": "342:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "342:30:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4502,
                        "nodeType": "ExpressionStatement",
                        "src": "342:30:27"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4489,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4486,
                      "src": "298:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4490,
                        "name": "testAccounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4482,
                        "src": "302:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "302:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "298:23:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4504,
                  "initializationExpression": {
                    "assignments": [
                      4486
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4486,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 4504,
                        "src": "283:9:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "283:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4488,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "295:1:27",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "283:13:27"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "323:3:27",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4493,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4486,
                        "src": "323:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4495,
                    "nodeType": "ExpressionStatement",
                    "src": "323:3:27"
                  },
                  "nodeType": "ForStatement",
                  "src": "278:105:27"
                }
              ]
            },
            "documentation": null,
            "id": 4506,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4482,
                  "mutability": "mutable",
                  "name": "testAccounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4506,
                  "src": "230:29:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4480,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "230:7:27",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4481,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "230:9:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "229:31:27"
            },
            "returnParameters": {
              "id": 4484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:27"
            },
            "scope": 4520,
            "src": "218:171:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4518,
              "nodeType": "Block",
              "src": "450:36:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4514,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4508,
                        "src": "466:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4515,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "471:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4513,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5231,
                      "src": "460:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:19:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4517,
                  "nodeType": "ExpressionStatement",
                  "src": "460:19:27"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f28e093d",
            "id": 4519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4508,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4519,
                  "src": "413:11:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4510,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4519,
                  "src": "426:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "412:30:27"
            },
            "returnParameters": {
              "id": 4512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "450:0:27"
            },
            "scope": 4520,
            "src": "395:91:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4521,
        "src": "179:309:27"
      }
    ],
    "src": "33:456:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc51a15dBeD231DE35ade81c4B82c6aB931FD2BF5",
      "transactionHash": "0xf2c505a2b0bca211e06591c183a77ac38976fe021f9d4c93d7c7d334ab9622dc"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-09-20T19:32:55.033Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}